cycle graph if go to node from diffrent way  in my path
or 
go to parent from direct child 
==========================================================================================
int n, m;
vector<vector<int>>adjList;
vector<int>vist,topsort, stck;
bool   isAcycle = 1;
void dfs(int u) {
    vist[u] = 1;
    stck[u] = 1;
    for (auto v : adjList[u]) {
        if (vist[v] == 0) {
            dfs(v);
        }
        else if (stck[v]==1) {
            isAcycle = 0;
        }
    }
    stck[u] = 0;
    topsort.insert(topsort.begin(), u);
}

int main() {
    //connected commponent 
    Fast();
   
    while (cin >> n >> m&&n>0&&m>0)
    {
        isAcycle = 1;
        adjList = vector<vector<int>>(n+2);
        vist= vector<int>(n+2,0);
        stck = vector<int>(n + 2);
        topsort.clear();
        int u, v;
        for (int i = 0; i < m; i++) {
            cin >> u >> v;
            adjList[u].push_back(v);

        }
        for (int i = 1; i <= n; i++) {
            if (vist[i] == 0) {
                dfs(i);
            }
        }
        if (isAcycle == 0) 
            cout << "IMPOSSIBLE\n";
        
        else 
        for (int i = 0; i <n; i++) cout << topsort[i]<<"\n";
        

    }
}