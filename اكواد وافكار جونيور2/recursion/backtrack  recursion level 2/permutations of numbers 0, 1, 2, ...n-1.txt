
// Print all possible permutations of numbers 0, 1, 2, ...n-1
===================================================================================
void perm(int i, int n, int vis[], int cur[])
{
	if(i == n)
	{
		for (int j = 0; j < n; ++j)
			cout<<cur[j];
		cout<<"\n";
		return;
	}

	for (int j = 0; j < n; ++j)
             if(!vis[j])
	{
		vis[j] = 1;
		cur[i] = j;

		perm(i+1, n, vis, cur);

		vis[j] = 0;
	}
}

=========================================================================================or
int vis[100], cur[100];
int n;
void perm(int i, int n, int vis[], int cur[])
{
    if (i == n)
    {
        for (int j = 0; j < n; ++j) {
            cout << cur[j];
            if (j != n - 1)
                cout << " ";
        }
        
        cout << "\n";
        return;
    }

    for (int j = 1; j <= n; ++j)
        if (!vis[j])
        {
            vis[j] = 1;
            cur[i] = j;

            perm(i + 1, n, vis, cur);

            vis[j] = 0;
        }
}
/**------------------------->>  Main  <<------------------------**/

int main() {
	Fast();

    cin >> n;
	
    perm(0,n,vis,cur);
}

