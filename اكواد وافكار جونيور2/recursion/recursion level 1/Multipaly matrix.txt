

======================================================================================================================================================================

int r1, r2, c1, c2;
int a[101][101], b[101][101];
int solve(int i, int k, int j) {
	if (k == c1)
		return 0;
	return a[i][k] * b[k][j] + solve(i, k + 1, j);
}
/**------------------------->>  Main  <<------------------------**/

int main() {
	Fast();

	cin >> r1 >> c1;
	for (int i = 0; i < r1; i++)
		for (int j = 0; j < c1; j++)
			cin >> a[i][j];
	cin >> r2 >> c2;
	for (int i = 0; i < r2; i++)
		for (int j = 0; j < c2; j++)
			cin >> b[i][j];
	for (int i = 0; i < r1; i++) {
		for (int j = 0; j < c2; j++)
			cout << solve(i, 0, j) << " \n"[j == c2 - 1];
	}

}



======================================================================================================================================================================
ll mat1[103][104], mat2[103][104], ans[103][104], cur = 0;
int n, m, x, y;
void multi(int i = 0, int j = 0, int cnt = 0) {
 
	if (i >= n)
		return;
 
	cur += mat1[i][cnt] * mat2[cnt][j];
	if (cnt < m)
		multi(i, j, cnt + 1);
 
	else if (j < y) {
		ans[i][j] = cur;
		cur = 0;
		multi(i, j + 1, 0);
	} else {
 
		multi(i + 1, 0, 0);
 
	}
 
}








======================================================================================================================================================================

