
=========================================================================================
int n;
vector<vector<int> > g;
int mx, at;
void DFS(int u, int p, int cost) {
	if(mx < cost) {
		mx = cost;
		at = u;
	}
	for(int i = 0; i < g[u].size(); ++i)
		if(g[u][i] != p)
			DFS(g[u][i], u, cost + 1);
}
int main() {
	cin >> n;
	g.resize(n);
	for(int i = 1; i < n; ++i) {
		int a, b;
		cin >> a >> b;
		--a; --b;
		g[a].push_back(b);
		g[b].push_back(a);
	}
	mx = -1;
	DFS(0, -1, 0);
	int from = at;
	mx = -1;
	DFS(from, -1, 0);
	int to = at;
	cout << from + 1 << " " << to + 1 << endl;
	cout << mx << endl;
	return 0;
}
=========================================================================================