// بص ي حبوب  انت  كل الى هتعملة ان هخلى الصفوف تعبر عن السعة الحاللية بتاعتى 
// والاعمدة تعبر عن العنصر الحالى  
//ولما اخدة لما مخدهوش  


// الفكرة ك كود  بص يوحش
// همشى على كل الصف من  فوق لتحت  اول مقابل رقم  هخلى قيمة الرقم الى  بعدة ف نفس الصف   بتسواوية  
// وكمان هخلى قيمة الرقم الى الاسكور بتاعة ينفع  اخدة مع اسكور الى قبلة ياخد اكبر قيمة  بين  قيمة المكان نفسة   وقيمة العنصر الى فى العمود الى قبلة والصف الى لما  اطرح منة  الاسكور بتاعة يدنى الصف الحالى 
// الصف بيعبر عن قيمة  او المكان الى فاضى ف الشنطة ناو  
// 


==================================================================================================

//space O()
//time O(n^2)

int dp[(int)1e3][(int)1e3];
pair<int, int>v[(int)1e5];
int n,s;
ll Knapsack() {

    mem(dp, -1);

    dp[s][0] = 0;
    if(s>=v[0].first)
    dp[s-v[0].first][0] = v[0].second;
    int ans = 0;
    for (int c = 1; c < n; c++) { // c the current item

        for (int r = 0; r <= s; r++) {  // r the current capctry
            if (dp[r][c-1] != -1) {   // c-1 as we start from zero

                if (s >= v[c].first) {
                    dp[r-v[c].first][c] = max(dp[r ][c-1]+v[c].second, dp[r - v[c].first][c]);
                    ans = max(ans, dp[r - v[c].first][c]);
                }
                dp[r ][c] = dp[r][c-1];
            }

        }
    }

    return ans;
    
}
/**------------------------->>  Main  <<------------------------**/
int main() {

    Fast();
   
    cin >> s>>n;
    for (int i = 0; i < n; i++) {
        cin >> v[i].first;
        cin >> v[i].second;
    }

   

    cout << Knapsack();
}