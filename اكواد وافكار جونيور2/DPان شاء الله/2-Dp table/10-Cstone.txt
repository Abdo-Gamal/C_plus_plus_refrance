int dp[(int)1e5 * 2][2];
int n, k;
vector<int>v;
int solve(int rem, int p = 0) {

	/*if (rem == 0) {
		return p;
	}*/

	int& ret = dp[rem][p];
	if (~ret)return ret;


	for (int j = 0; j < n; j++) {

		if (rem >= v[j]) {
			ret = solve(rem - v[j], !p);
			if (ret == p)return ret;
		}
	}

	return ret = !p;
}

/**------------------------->>  Main  <<------------------------**/
int main() {

	Fast();
	cin >> n >> k;
	v = vector<int>(n + 2);
	for (int i = 0; i < n; i++)
		cin >> v[i];

	mem(dp, -1);
	cout << (solve(k, 0) == 0 ? "First" : "Second");

}