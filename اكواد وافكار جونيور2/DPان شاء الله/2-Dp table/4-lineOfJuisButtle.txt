//بص  يوحش هو هيديك صف من اعصير  كل مكان فى قيمة  وهو بياخد  من الطرف بس  يعنى اليمين والشمال  
//وهو  عاوز  يعرف  يختار بحيث الناتج يكون اكبر ما يمكن  
//  المشكلة دى  متتحلش grady  
// عشان  الجريدى بيختار احسن اختيار فى الحالى بس  
// اما ال  dp
//بيجيب كل الاحتمالت  ليها 
// فكرة الحل انى اكونsegment 
//  هجريب كل الاحتمالات 
//يعنى  هعتبر كل عنصر سجمنت   
//بيعد كدة هاخد العنصر الى جمبية من الشمال  و اليمين واحد اكبرهم  وهكذا لكل عنصر  
// بعد كدة هكبر حجم السكمن واخد  اكبر عنصر من السجمن الاولة الى انا حسبتها " الى هى اكبر عنصر بين  عنصرريبن" بس كدة   

============================================================================

/space O(n^2)
//time O(n^2)
int arr[10000], dp[(int)1e3][(int)1e3];
int n;
ll lineOfJuisButtle() {


    for (int i = 0; i < n; i++) {
        dp[i][i] = n * arr[i];   //as daig  contine the last item 
    }
    for (int c = 1; c <n; c++) {  // wolk  column by column

        for (int r = c-1; r>=0; r--) { //start after the dige of column
            int time = n - ( c-r);
            dp[r][c] = max(dp[r + 1][c] + time * arr[r], dp[r][c - r] + time * arr[c]);
          
        }
    }
    return dp[0][n-1];// as answer exist thire
}


/**------------------------->>  Main  <<------------------------**/
int main() {

    Fast();
   
    cin >> n;
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }



    cout << lineOfJuisButtle();
}