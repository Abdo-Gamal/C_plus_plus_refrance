


/*
 Consider an arbitrary sequence of integers. One can place + or - operators between integers in the sequence,
 	 thus deriving different arithmetical expressions that evaluate to different values. Let us, for example,
 	 take the sequence: 17, 5, -21, 15. There are eight possible expressions:
17	+	5	+	-21	+	15	=	16
17	+	5	+	-21	-	15	=	-14
17	+	5	-	-21	+	15	=	58
17	+	5	-	-21	-	15	=	28
17	-	5	+	-21	+	15	=	6
17	-	5	+	-21	-	15	=	-24
17	-	5	-	-21	+	15	=	48
17	-	5	-	-21	-	15	=	18
We call the sequence of integers divisible by K if + or - operators can be placed between integers in the
sequence in such way that resulting value is divisible by K. In the above example, the sequence is divisible by 7 (17+5+-21-15=-14) but is not divisible by 5.
You are to write a program that will determine divisibility of sequence of integers.
*/







// called with tryAll1(1, v[0])		// e.g. tryAll1(1, 17)
int tryAll1(int i, int sum) {
	if (i == n)
		return sum % k == 0;

	if (tryAll1(i + 1, sum + v[i]) || tryAll1(i + 1, sum - v[i])	)
		return 1;

	return 0;

}









int fix(int a) {
	return (a % k + k) % k;
}

int tryAll2(int i, int mod) {
	int &ret = mem[i][mod];
	if (ret != -1)
		return ret;
	if (i == n)
		return ret = mod == 0;

	if (tryAll2(i + 1, fix(mod + v[i])) || tryAll2(i + 1, fix(mod - v[i])))
		return ret = 1;
	return ret = 0;

}
// بص   هو  عامل ال    
//&ret دة  بيشاور على الارى  
//  ف اى تغير فية هيغير فى الارى   
   
// وعامل اررى   اتنين ديمنشن   عشان  عندى متغيرين      
//   يعنى انت هيكون  عندك   لكل  
// مثلا   i=1   more than one mod 
 // وحدة لما ندمت ب الموجدب 
// ولما ندمت بالسالب


























