// Much staff? Let's use STL!

#include <bitset>		// The power, speed and memory handling in one place

void STL() {
	const int N = 20;		        // const    الزم   
	string s = "000111";
	bitset<N> x(s);			        // 00000000000000000111  
         // <بتاخد هنا حاجة ثابتة> 
           // اما هنا بتاخد  ()  رقم او استرنج 
 
	x.set();				// 11111111111111111111
	x.flip();				// 00000000000000000000

	x = 10;	  		                // 00000000000000001010  ////هو هنا حول الرقم لبينى لوحدة  
	x |= 3;					// 00000000000000001011
	x = (x<<3);				// 00000000000001011000
	x = ~x;					// 11111111111110100111
	x.set(15, 0);			         // 11110111111110100111
	x.set(15);				// 11111111111110100111
	x.flip(0);				// 11111111111110100110
	x.count();				// Returns the number of bits that are set.
	x.any();				// Returns true if any bits are set. // bits mean ones
	x.none();				// Returns true if no bits are set.
	x.test(15);
==========================================================================================
//  لما  بتحول الرقم من بتس الى   انتجر  بترجع الرقم موجب  بس 
//  عشان   هى بتحو ل  ل  unsign lonf long 
// (الحل  اعملها   cast  for  int or  ll)  
	x.to_ulong();	//بترجع الرق تانى intager    // Returns an unsigned long represent mask
 ===================================================================================
	// The most interesting             عشان كدة قدرت اتعامل معاها اكنها  استنج 
	if(x[2] == 0)
		;

	x[0] = 1;	// Set bit from most right to 1
	x[N-1] = 0;	// Set bit from most left to 0

	cout<<x<<"\n";			// display a string of N bits
}

