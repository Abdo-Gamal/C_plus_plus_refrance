--------------------------------------------------------------------------------------
// Get bit           // base 0
int getBit(int num, int idx) {
  return ((num >> idx) & 1) == 1;		// 110100, idx = 4  -->  110 & 1 = 0
}
--------------------------------------------------------------------------------------
int setBit1(int num, int idx) {
	return num | (1<<idx);
}
--------------------------------------------------------------------------------------
int setBit0(int num, int idx) {
	return num & ~(1<<idx);				// 110100, idx = 3  -->  110100 & ~000100 = 110100 & 111011
}
--------------------------------------------------------------------------------------

int flipBit(int num, int idx) {
	return num ^ (1<<idx);
}
========================================================================================
//  بترجع  قيمة   اول  مكان على اليمين   
ll leastBit(ll num) {
	return (num & -num);  //  -mun  is two  complement
}
========================================================================================
//num%mod, mod is a power of 2 ( الزم )
ll Mod(ll num, ll mod) {
	return (num & mod - 1);
}
========================================================================================
bool isPowerOfTwo(ll num) {
	return (num & num - 1) == 0;
}
اى رقم زوجى هو عبارة عن اصفار ثم   واحد  
--------------------------------
الرقم الفردى  الى بعد الزوجى على طول زى  اربعة وتلاتة  الرقم الفردى دة  عبارة 
عن وحايد ثم صفر مكان  الواحد بتاع الرقم الزوجى
========================================================================================
 اول صفر ونت جاى من اليمين  دة قصدة
int turnOnLastZero(int S) {
	return S | S + 1;
}
EX:
011 input , 010  input 
111 otput   011   output 

 ========================================================================================
اول  واحد ونت جاى من اليمين  دة قصدة
int turnOffLastBit(int S) {
	return S & S - 1;
}
 ========================================================================================
اول   شوية  اصفار  ونت جاى من اليمين  دة قصدة
int turnOnLastConsecutiveZeroes(int S) {
	return S | S - 1;
}
EX:
001100 input
001111 output
 ========================================================================================
اول   شوية  وحايد ونت جاى من اليمين  دة قصدة
int turnOffLastConsecutiveBits(int S) {
	return S & S + 1;
}


========================================================================================
// for run __builtin_popcount in visual studio
#ifdef _MSC_VER
#include <intrin.h>
#define __builtin_popcount __popcnt
#ifdef _WIN64
#define __builtin_popcountll __popcnt64
#else
inline int __builtin_popcountll(__int64 a) {
	return __builtin_popcount((unsigned int)a) + __builtin_popcount(a >> 32);
}
#endif
#endif
=================================================================