
int sum_range2(int S, int E, vector<int> & cum_sum) {
  return cum_sum[E] - cum_sum[S - 1];
}

void one_based() {
  vector<int> A = { 0, 2, 1, 4, 5, 3, 7 };  // let A[0] = 0
  vector<int> S(A.size(), 0);

  //pre-processing: Compute cumulative sum array: Start from 1
  for (int i = 1; i < (int) A.size(); i++)
    S[i] += A[i] + S[i - 1];

  // 1-based queries
  cout << sum_range1(1, 6, S) << "\n";
  cout << sum_range1(2, 6, S) << "\n";
  cout << sum_range1(3, 5, S) << "\n";
}