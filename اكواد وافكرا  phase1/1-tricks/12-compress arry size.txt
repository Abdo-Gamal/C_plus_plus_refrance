لو حجك الارى كبر وعاوز اصغرها عشان اقلل حجمها فى الزاكرة يصغر او اسرع                   العمليات   من مقارنة او غيرة                                                
Say we have vector numbers, each of (-->value max 9<--), and we need to use them as state: build a vector of compressed number.

	Idea is to compress them in set of long longs, as long long can have more numbers, add it.
	1 7 4 0 9 4 8 8 2 4 5 5 1 7 1 1 5 2 7 6 1 4 2 3 2 2 1 6 8 5 7 6 1 8 9 2 7 9 5 4 3 1 2 3 3 4 1 1 3 8 7 4 2 7 7 9 3 1 9 8
	1740948824551711527 6142322168576189279 5431233411387427793 198
		-> So 60 numbers compressed to 4 numbers.
		-> Imagine how this could be fast in some situations?

	How to do so? if we have 1 7 4 -> 1*10+7 = 17 * 10 + 4 = 174, but before doing this operation make sure no over flow

	vector<ll> compress(vector<int> v)
	{
		vector<ll> ret;
		ret.push_back(0);

		rep(i, v) {
			if(ret.back() > LONG_LONG_MAX / 10 || ret.back()*10 > LONG_LONG_MAX - v[i])// دى شورط ان الرقم يعمل oerflow
				ret.push_back(0);                                                     // الشروط موجودة فى  تكست tipsans triks

			ret.back() = ret.back() * 10 + v[i];
		}

		return ret;
	}
