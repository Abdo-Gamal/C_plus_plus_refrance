/**********************************************************************************************************************************/ 
int n,m;
	    cin>>n>>m;
	    vector<int>v(200005);       //n*2   ضعف الحجم 
	    while(n--){
	        int x;
	        cin>>x;
	            v[100000+x]++;           // لو  كان الرقم سالب هيروح   للنص اليمين ميت الف  ناقص الرقم
                                             // لو كان الرقم موحب هيروح للخانة رقم ميت الف زائد الرقم
	    }                                // كدة يبقا قسمنا الارى لجزئين واحد للموجب وواحد للسالب 
	    for(int i=100000-m;i<100000+m;i++)
	        if(!v[i]){
	           cout<<i-100000<<"\n";
	           break;
	        }
/**********************************************************************************************************************************/
int a[30000002];             // ) اهم حاجة زود الاندكسات خاالص بحيث عمرك متوصل لسالب  عشرة اس  سبعة دى
int nu[30000002];
int main()
{
    fast();
    long long n,k,ans=0;
    cin>>n>>k;
    k+=20000000;                     //  ضعف الزيادة العدية  عشان بطرح فى الزيادة هطير 
    for(int i=0;i<n;i++){
        cin>>a[i];
        a[i]+=10000000;
        nu[a[i]]++;
    }
    for(int i=0;i<=20000000;i++){  //   مممكن تمشى لحاد k  احسن    فى   بص على الكود الى تحت
        long long x=i;
        long long z=k-i;
        if(nu[x]&&nu[z]&&x!=z){   // مش  هيكون سالب عشان  هو بيشوف الx الاول   ف
                                  // شوف الاكس 2000000  اكيد مش هيكون موجود 
            ans+=(nu[x]*1LL*nu[z]);   // مفروض نقسم على اتنين  بس هقسم فى الاخر
        }
        else if(nu[x]&&nu[z]&&x==z){
            ans+=nu[x]*1LL*(nu[x]-1); // الحجة هتحسب مرتين    ف هقسم تحت على اتنين 
        }
    }
    cout<<ans/2;
    return 0;
}
/**********************************************************************************************************************************/

int frq[3 * ((int) 1e6 + 5)]; //
int n, k;
void Solve() {
 
	scanf("%d%d", &n, &k);
	vector<int> v(n);
	k += 2 * (int) 1e6;  
	for (int i = 0; i < n; i++) {
		scanf("%d", &v[i]);
		v[i] += (int) 1e6;
		frq[v[i]]++;
	}
	ll ans = 0;
	for (int i = 0; i <=k; i++) {
		int  x = i;
		int  ather = k - x;          
		//
 
		if (frq[x] && frq[ather] && ather != x)
			ans += 1ll * frq[x] * frq[ather];
 
		else if (frq[x] && frq[ather] && ather == x)
			ans += (frq[x] * 1ll * (frq[x] - 1));
 
	}
	printf("%lld", ans / 2);
}
 /**********************************************************************************************************************************/


