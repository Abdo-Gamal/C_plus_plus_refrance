
======================================================

◼ How many words either start with cb or c?
◼ 2 + 4? Wrong there is overlap: 2 + 4 - 2(intersection) = 4
◼ How many words either start with cb or end with bc?
◼ {cbb, cbc} + {bbc, cbc} - {cbc} = 2+4-1 = 5
======================================================

Most of counting involves duplicate counting

issue [count item more than once].

◼ IE principle is a generic sum rule to solve that

◼ | A U B U C |=|A|+|B|+|C|-|A n C|-|A n B|-|B n C|+|A n B n C |

◼ 2^3 -1 = 7 subsets (exponential)

======================================================
General Computations
◼ Enumerate all subsets
◼ Compute each one intersection
◼ If odd subset add (include) it
◼ If even subset subtract (exclude) it
=====================================
◼ How many integers in {1,2 ...,100} are
divisible by 2, 3, 5 or 7?
◼ How many divisible by 2? 100 / 2 = 50
◼ How many divisible by 3? 100 / 3 = 33
◼ How many divisible by 2, 3? 100 / (2*3) = 16
◼ How many divisible by 2, 3, 7? 100 / 42 = 2 => {42, 84}

Answer: compute 2^4 -1 terms = 15 terms
◼ F(2)+F(3)+F(5)+F(7)
◼ -F(2, 3)-F(2, 5)-F(2, 7)-F(3, 5)-F(3, 7)-F(5, 7)
◼ +F(2, 3, 5)+F(2, 3, 7)+F(2, 5, 7)+F(3, 5, 7)
◼ -F(2, 3, 5, 7)

==========================================================================
ll arr[]={}; العناصر  
ll inc_exe(int idx = 0, int d = 1, int sign = -1) {
	if (idx == عدد العناصر) {
		if (d == 1)return 0;
		return sign * n / d;
	}
	return inc_exe(idx + 1, d, sign) + inc_exe(idx + 1, d * arr[idx], sign*-1);
}
==========================================================================