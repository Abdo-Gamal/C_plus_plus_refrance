#include<set>
//دى بتشيل اى نوع من المتغيرات 
// الميزة  ان  مفيش تكرار  وكل العناصر مترتبة 
/*
//كل حاجة بتاخد كمبلكستى   O(log(n))
==============================================================================================================================================================
	set 
 
	decleration
	insert
	begin
	end
	erase
	find
	size
	iterate
	*/

                rebgin  
==============================================================================================================================================================
	set<int>s;
 	set<int, greater<int>> s;  من الكبير للصغير 
	set<pair<int, int>, greater<pair<int, int>>> se;

 
==============================================================================================================================================================
	s.insert(1);
	s.insert(3);
	s.insert(4);
	s.insert(0);
	s.insert(10);
	s.insert(10);
	// 0 1 3 4 10
 
	cout << s.size() << endl;
 
	set<int> ::iterator it;
	auto it1 = s.begin();    // auto  بيتحدد النوع بتاعة اثناء ال runtime
                                 
	it = s.begin();
 
	cout << *it << endl;
 
	it = s.end();  //  بيشاور على مكان الى بعد الاخير 
	it--;           // كدة هخلية يشاور على المكان الاخير 
	cout << *it << endl;
 
	for (it = s.begin(); it != s.end(); it++){
		cout << *it << " ";
	}
	cout << endl;
 ==============================================================================================================================================================
// بتاخد  قيمة او بينتر اى حاجة عادى 

	s.erase(5);
 
	s.erase(s.begin());// هيمسح المكان دة بس or//s.erase(*s.begin())
 
	it = s.end();
	it--;
	s.erase(it);
 
	// find
 ==============================================================================================================================================================
	//  هنا بيرجع بينتر بيشاور على الرقم الى انت عاوز او  لو ملقهوش بيرجع بينتر بيشاور على اند
           // حلاحظ ان   كل حاجة بتعامل  مع بينتر   بالاتريتور 
    it = s.find(5);     
 
	// O(log N )
 
	if (it == s.end()){
		// not found
	}
	else {
		// find and it`s value *it
		// can`t get its index 
 
		int idx = 0;
		// 0 4 5 10 20 30
		for (it = s.begin(); it != s.end(); it++){    //     لو  عاوز اجيب الاندكس  بتاع رقم
			if (*it == 5){
				break;
			}
			idx++;
		}
		cout << idx << endl;
	}
 
	s.erase(s.find(1));
=====================================================================================================================================================(multiset)
multiset<int> ms;  دى بتقبل التكرار    عادى    
// لو عاوز   تمسح منها كل اتكرارات مثلا للخمسة كدة
s.erase(5);
// اما لو عاوز تمسح خمسة وحدة بس منها
s.erase(s.find(5));
// find  بترجع   بينتر   بيشاور على الخمسة 

 ======================================================================================================================================================(auto)
    auto it1 = s.begin();    // auto  بيتحدد النوع بتاعة اثناء ال runtime
// بدال دة   set<int> ::iterator it;
==============================================================================================================================================================
	for (auto it : s){
		cout << it << endl;
	}
============================================================================================================================================lower_bound &&upper
int x;//x is value
 auto it = st.lower_bound(x); 
printf("%d\n", it != st.end() ? *it : -1);//it as a pointer
=============================================
auto it = st.upper_bound(x);
printf("%d\n", it != st.end() ? *it : -1);
