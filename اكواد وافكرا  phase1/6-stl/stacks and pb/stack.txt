// Standard Template Library
 #include<stack>

 
	/*
	stack
 
	push
	pop
	top
	size
	empty
 
	*/
 
	stack<int> st;
 
	st.push(2);
	st.push(5);
	st.push(7);
	st.push(1);
	// 1 7 5 2
	// 7 5 2
//قبل متعمل  بوب لازم  تشوف هو الاستاك فاضى ولا لا
	st.pop();// بحزف اخر حاجة دخلت  عكس ال queue   
	cout << st.top() << endl;
 
	cout << st.empty() << endl;// عشان اعرف هو فاضى ولالا
 
	cout << st.size() << endl;
// لو عاوز تحزفة كلة عرفة   تانى  //stack<int> st;
 
////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////// امثلة مهمة  
/////////////////////////////

1)next greater element (use of stack)
-------------------------------------
You must find the minimum integer j such that (i<j≤n) and ai < aj.


int n, q;
int frq[(int) 1e6] ;
void Solve() {
	scanf("%d", &n);
	vector<int> v(n);
	for (int i = 0; i < n; i++)
		scanf("%d", &v[i]);

	stack<pair<int, int>> st;
	mem(frq, -1);
	for (int i = 0; i < n; i++)
		if (st.empty())
			st.push( { v[i], i });
		else {
			while (!st.empty() && st.top().first < v[i]) {
				frq[st.top().second] = i;
				st.pop();

			}
			st.push( { v[i], i });
		}

	scanf("%d", &q);
	while (q--) {
		int x;
		scanf("%d", &x);
		printf("%d\n", frq[x - 1] != -1 ? frq[x - 1] + 1 : -1);

	}

}
///////////////////////////////////////////////////////////////////////////////////




 