=======================================================================================================================================================================
like frq:-
--------

unordered_map<int, unordered_map<char, int>>mp;
forr(i, n)  mp[v[i]][s[i]]++; 
if (mp[v[i]][t[i]] == 0) { b = 0; break; }
			else mp[v[i]][t[i]]--;
===================================================================================================================================================================
bool cmp(pair<string, pair<int, int>>p1, pair<string, pair<int, int>>p2)
{
	if (p1.first != p2.first)return p1.first < p2.first;
	if (p1.second.first != p2.second.first)return p1.second.first > p2.second.first;
	if (p1.second.second != p2.second.second) return p1.second.second < p2.second.second;
}
		sort(v.begin(), v.end(),cmp);

=====================================================================================================================================================================
bool ok(int l) {
	l--;
	bool flag = 0;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			if (valid(i+l , j+l ) && (gr[i + l][j + l] - gr[i + l][j - 1] - gr[i - 1][j + l] + gr[i - 1][j - 1]) <= l_b)
				return 1;

		}
	}
	return 0;
}
int solve(int end=n,int st=1) {
	ans = 0;
	while (st <= end) {
		mid = (st + end) / 2;

		if (ok(mid)) {
			ans = mid;
			st = mid + 1;
		}
		else end = mid -1;
	}
	return ans;
}
=====================================================================================================================================================================
for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			gr[i][j] += gr[i][j - 1];
		}
	}
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			gr[j][i] += gr[j - 1][i];
		}
	}
====================================================================================================================================================================
-inclug excluging                  :-
-----------------------------
ll arr[]={};
ll inc_exe(int idx = 0, int d = 1, int sign = -1) {
	if (idx == 4) {
		if (d == 1)return 0;
		return sign * n / d;
	}
	return inc_exe(idx + 1, d, sign) + inc_exe(idx + 1, d * arr[idx], sign*-1);
}

====================================================================================================================================================================
	 long long  sum,a,b,x;
	cin >> a>> b >> x;
	if (a > b)
		swap(a, b);

	b -= (b % x);
	if (x == 0)cout << a + b;

	else {
		if (x >= a)
			a = x;
		else {
			if (a % x != 0)
				a = a + (x - ( a%x));
			
		}
		x = (b- a+x)/x;
		sum = (a+b)*x/2;
		cout << sum;
	}

===================================================================================================================================================================
void file() {
	cout << flush;
	ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#ifndef ONLINE_JUDGE
	//freopen("input.in", "r", stdin);
	//freopen("output.out", "w", stdout);
#endif
}
--------------------------------------
#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	//freopen("out.txt", "w", stdout);
#endif
}
====================================================================================================================================================================
bool valid(int x, int y, int z, int w) {
	if (x < 0 || y >= n || z < 0 || w >= n) {
		return 0;
	}
	else {
		return 1;
	}
}

=====================================================================================================================================================================

bool valid(int i, int j) {
	return 0 <= i && i < n && 0 <= j && j < n && v[i][j] == '1';
}
 ===================================================================================================================================================================
int m, n;
bool vaild(int i,int j) {

	if (i < 0 || j < 0 || i >= n || j >= m)return 1;
	return 0;

}

=====================================================================================================================================================================
ll pow(ll x, ll y)
{
	{
		if (y == 0)return 1;
		if (y == 1)return x;
		ll r = pow(x, y / 2) % mod;
		return r % mod * r % mod * pow(x, y % 2) % mod;
	}
}


===================================================================================================================================================================
int copare(double a, double b) {
	if (fabs(a - b) <= 10e-7)return 0;
	else return a < b ? -1 : 1;
}

=====================================================================================================================================================================

ll NpR(ll n, ll r) {
	ll ans = 1;
	for (ll i = (n - r) + 1; i <= n; i++) {
		ans *= i;
		ans %= mod;
	}
	return ans;
}

====================================================================================================================================================================
ll nCr(ll n, ll r) {
	ll ans = 1;
	ll div = 1; // r! 
	for (ll i = r + 1; i <= n; i++) {
		ans = ans * i;
		ans /= div;
		div++;
	}
	return ans;
}
====================================================================================================================================================================
===>nCr(n,2):-The number of all possibilities:-
-----------------------------------------------
n(n-1)/2;

=======================================================================================================================================================================
bool palindrom(string s) {
	string r = s;
	reverse(r.begin(), r.end());
	if (r == s)
		return 1;
	return 0;
}

=======================================================================================================================================================================

ll gcd(ll x, ll y) { return (!y) ? x : gcd(y, x % y); }
ll lcm(ll x, ll y) { return ((x / gcd(x, y)) * y); }////


===================================================================================================================================================================

string s;
	cin >> s;
	int sum =0;
	for(int i=0;i<s.size();i++){
		sum = (sum *10 + s[i] - '0')%36;
	}
cout<<(sum?"Yes":"No)<<"\n";


====================================================================================================================================================================
-suptring  or suparray:-
---------

for (int i = 0; i < n; i++) {

for (int j = i; j < n; j++) {

for (int k = i; k <= j; k++) {




}



}
}
====================================================================================================================================================================
-bitmask:-
--------
vector<int>v;
	int n; cin >> n;
	ll ans = 0;
	forr(i, n)cin >> arr[i];
	for (int i = 0; i < (1 << n); i++) {
		int curstat = i;
		
		for (int j = 0; j < n; j++) {
			if (curstat & (1<<j)) {
				b = arr[j];
				
			}
			
		}
		

	}
	
===================================================================================================================================================================
-or:-suptring :-
---------------
for (int i = 0; i < sz(s); i++) {
for (int j = 1; i + j <= sz(s); j++) {
string t = s.substr(i, j);

=======================================================================================================================================================================
??????? ???? ????? ???? ?? ???? ??? ????? ??? ????? 
------------------------------------

bool isLeap(int y) {
	return y % 400 == 0 || (y % 100 != 0 && y % 4 == 0);
}
 
string dayOfTheWeek(int day, int month, int year) {
	vector<int> md = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
	vector<string> show{ "Friday", "Saturday", "Sunday", "Monday",
		"Tuesday", "Wednesday", "Thursday" };
	int idx = 6;
	for (int y = 1971; y < year; y++)
		idx += (isLeap(y) ? 366 : 365);
	for (int m = 1; m < month; m++)
		idx += (isLeap(year) && m == 2 ? 29 : md[m]);
	idx += day;
	return show[idx % 7];
}
=========================================================================================


















































